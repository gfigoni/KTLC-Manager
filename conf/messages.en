title.default = Kill The Last Cup
title.ktlc = Kill The Last Cup | edition #%s
title.players = Kill The Last Cup | players
title.mappers = Kill The Last Cup | mappers
title.player = Kill The Last Cup | %s
title.stats = Kill The Last Cup | statistics
title.comparator = Kill The Last Cup | %1$s vs %2$s

main.home = Home
main.players = Players
main.mappers = Mappers
main.ktlcs = KTLC editions
main.forum = Forum
main.admin = Administration
main.stats = Statistics

ktlc = KTLC
ktlc.number = KTLC #%s
ktlc.number.title = KTLC #
ktlc.date = Date
ktlc.size = Players
ktlc.nbparticipants = %s players
ktlc.next = Next KTLC
ktlc.prev = Previous KTLC

player = Player
player.login = Login
player.rank = Rank
player.score = Score
player.nbraces = Races
player.rounds = Rounds
player.categories = Categories
player.mapper = Mapper

player.stats.first = 1st Place
player.stats.second = 2nd Place
player.stats.third = 3rd Place
player.stats.first_short = 1st
player.stats.second_short = 2nd
player.stats.third_short = 3rd
player.stats.ktlcEd = KTLC editions
player.stats.playerStats = Player statistics
player.stats.playerStats_legend = This table shows the statistics of the player for the KTLC.
player.stats.participation = Participation
player.stats.numKTLC = Number of played KTLCs
player.stats.numKTLC_TMU = KTLC TMU
player.stats.numSKTLC_TMU = Super KTLC TMU
player.stats.numKTLC_TM2 = KTLC TM2
player.stats.numRaces = Number of played Maps
player.stats.numRuns = Number of played Runs
player.stats.estimatedTime = Estimated total play time (<em>~1min/run</em>)
player.stats.avgRankKTLC = Average rank by KTLC
player.stats.avgOpponents = Average number of opponents by KTLC
player.stats.bestEnviro = Best environment
player.stats.bestAvgRank = Best average rank
player.stats.higestNumPodium = Highest number of podiums
player.stats.noPodium = No podium
player.stats.podiums = Podiums
player.stats.byKTLCs = By KTLC
player.stats.byRaces = By Map
player.stats.numPerfects = Number of "Perfects"
player.stats.longSeriePodium = Longest series of podiums in KTLC
player.stats.from = From
player.stats.to = To
player.stats.lastPlaces = Last places
player.stats.numEpicFails = Number of "Epic Fails"
player.stats.ktlcResultsbyRank = KTLC results by rank
player.stats.raceResultsbyRank = Map results by rank
player.stats.avgRankByEnviro = Average rank by environment
player.stats.numPodiumsByEnviro = Podiums by environment
player.stats.Rank = Rank
player.stats.resultKTLC = Results by KTLC
player.stats.days = d
player.stats.hours = h
player.stats.minutes = m

mapper = Mapper
mapper.stats.stats = Statistics
mapper.stats.createdMaps = Created Maps
mapper.stats.mapName = name
mapper.stats.enviro = Environment
mapper.stats.ktlc = KTLC
mapper.stats.mapperStats = Mapper statistics
mapper.stats.mapperStats_legend = This table shows the statistics of the player as mapper for the KTLC.
mapper.stats.measures = Measures
mapper.stats.values = Values
mapper.stats.numCreated = Number of created maps
mapper.stats.numDistinctPlayer = Number of distinct players
mapper.stats.avgNumPlayer = Average number of players by maps
mapper.stats.numRunsOnMaps = Number of runs played on maps
mapper.stats.numDistinctKtlcs = Number of distinct KTLCs as mapper
mapper.stats.favEnviro = Favorite mapping environment
mapper.stats.numMapsByEnviro = Number of maps by Environment

stats.title_generalStats = General Statistics
stats.title_playerChart = Number of Players by KTLC
stats.title_enviroChart = Number of Maps by Environment
stats.title_hallOfFame = Hall of Fame
stats.title_hallOfShame = Hall of Shame
stats.total = Total
stats.ratio = Ratio
stats.first = 1st
stats.second = 2nd
stats.third = 3rd
stats.fourth = 4th
stats.maps = # Maps
stats.ktlcs = # KTLCs
stats.averageRank = Average Rank
stats.victims = # Victims
stats.author = Author
stats.map = Map
stats.enviro = Environment
stats.totalKTLC_TMU = Number of KTLC TMU (SKTLC TMU)
stats.totalKTLC_TM2 = Number of KTLC TM2
stats.list_ktlc_spacer = &#32;-&#32;
stats.perfects = # Perfects / # KTLCs
stats.epicFails = # Epic Fails / # KTLCs
stats.players = players

stats.measures = Measures
stats.values = Values
stats.totalKTLCs = Total number of KTLCs
stats.totalPlayers = Total number of players
stats.avgPlayers = Average number of players by KTLC
stats.playersPercentage = Number of players that participated<br /> to more than %d%% of the KTLCs
stats.totalMaps = Total number of played maps
stats.avgMaps = Average number of maps by KTLC
stats.totalRuns = Total number of played runs
stats.biggest = KTLC with the <strong>highest</strong> number of players
stats.smallest = KTLC with the <strong>smallest</strong> number of players
stats.time = Statistics generation date
stats.ranking_activity_title = Most Active Players
stats.ranking_activity_legend = Top%d of the players which participate the most often to the KTLCs.
stats.ranking_bestAvgRank_title = Best Average Rank
stats.ranking_bestAvgRank_legend = Top%1$d of the players with the <strong>Best Average Ranks</strong>. Only players which participated to at least %2$d%% of the KTLCs are counted.
stats.ranking_mapper_title = Most Productive Mappers
stats.ranking_mapper_legend = Top%d of the track builders which created the highest number of maps for the KTLC.
stats.ranking_podiumKTLC_title = Number of Podiums by KTLC
stats.ranking_podiumKTLC_legend = Top%s of the players with the highest number of <strong>podiums</strong> performed during the <strong>KTLC</strong>, with respect to the total number of KTLC they played. Results beyond the third place are not used.
stats.ranking_podiumRace_title = Number of Podiums by Maps
stats.ranking_podiumRace_legend = Top%s of the players with the highest number of <strong>podium</strong> performed during the <strong>races</strong> of the KTLCs, with respect to the total number of maps they played. Results beyond the third place are not used.
stats.ranking_perfect_title = Number of 'Perfects'
stats.ranking_perfect_legend = Shows the ranking of all the players that succeeded to perform a 'Perfect' during a KTLC. A 'Perfect' corresponds to a situation where a player <strong>wins all the maps</strong> played during a KTLC.
stats.ranking_numberlastPlaceKTLC_title = Number of Last Places
stats.ranking_numberlastPlaceKTLC_legend = Top%1$d of the players that finished <strong>at the last rank</strong> during a KTLC. Only players which participated to at least %2$d%% of the KTLCs are counted. 
stats.ranking_numberlastPlaceRace_title = Number of Eliminations at First Round
stats.ranking_numberlastPlaceRace_legend = Top%1$d of the players that have been eliminated <strong>at the first round of a map</strong> during a KTLC. Only players which participated to at least %2$d%% of the KTLCs are counted.
stats.ranking_worstAvgRank_title = Worst Average Rank
stats.ranking_worstAvgRank_legend = Top%1$d of the players with the <strong>Worst Average Ranks</strong>. Only players which participated to at least %2$d%% of the KTLCs are counted.
stats.ranking_violentMap_title = Most Violent Maps
stats.ranking_violentMap_legend = Top%1$d of the maps that eliminated the highest number of players during the <strong>first round</strong> (discovery lap). The number of <em>victims</em> that failed at first lap is shown with respect to the total number of players.
stats.ranking_epicFail_title = Number of 'Epic Fails'
stats.ranking_epicFail_legend = This ranking shows the players that played a longer time during the warm ups than during the KTLC... More precisely, it shows the ranking of all the players that failed miserably during a KTLC, by being <strong>eliminated at first round of each maps</strong> that they played. Only players that played on a minimum of %d maps during a KTLC are counted.

comparator.possibleActions = Possible Actions
comparator.or = or
comparator.compareWith = Compare <strong>%s</strong> with:
comparator.compare = Comparison
comparator.with = with
comparator.player.onlyPlayer = You can choose to compare the player with another one by entering a particular <strong>login</strong> in the text field and clicking <em>OK</em>. Using auto-completion, logins of possible <strong>players</strong> will propose after typing the first character. You also have to possibility to compare these statistics with a <strong>random player</strong> from the database which participated to at least <strong>%1$d%%</strong> of the KTLCs.
comparator.player.alsoMapper = If the player proposed tracks to the KTLC, it is possible to inspect his statistics as <strong>mapper</strong>.
comparator.player.toMapperStats = Statistics as mapper
comparator.player.randomPlayer = Random player
comparator.players.onlyPlayers = You can choose to compare two players by entering their <strong>logins</strong> in the two text fields and clicking <em>OK</em>. Using auto-completion, logins of possible <strong>players</strong> will propose after typing the first character. You also have the possibility to compare two <strong>random players</strong> with a minimum percentage of participation to the KTLC of <strong>%1$d%%</strong>. 
comparator.players.alsoMappers = If the two selected players proposed tracks to the KTLC, it is possible to compare their <strong>statistics as mappers</strong>.
comparator.players.toMappersStats = Compare mappers
comparator.players.randomPlayers = Random players
comparator.players.withARandomPlayer = With a random player
comparator.mapper.onlyMapper = You can choose to compare the mapper with another one by entering a particular <strong>login</strong> in the text field and clicking <em>OK</em>. Using auto-completion, logins of possible <strong>mappers</strong> will propose after typing the first character. You also have the possibility to compare these statistics with a <strong>random mapper</strong> from the database which built at least <strong>%1$d%%</strong> of the maps of the KTLC. 
comparator.mapper.alsoPlayer = If the mapper also played during the KTLC, it is possible to inspect his statistics as <strong>player</strong>.
comparator.mapper.toPlayerStats = Statistics as player
comparator.mapper.randomMapper = Random mapper
comparator.mappers.onlyMappers = You can choose to compare two mappers by entering their <strong>logins</strong> in the two text fields and clicking <em>OK</em>. Using auto-completion, logins of possible <strong>mappers</strong> will propose after typing the first character. You also have the possibility to compare two <strong>random mappers</strong> which both built at least <strong>%1$d%%</strong> of the maps of the KTLC.
comparator.mappers.alsoPlayers = If the two selected mappers also participated to the KTLC as players, it is possible to compare their statistics as <strong>players</strong>.
comparator.mappers.toPlayerStats = Compare players
comparator.mappers.randomMappers = Random mappers
comparator.mappers.withARandomMapper = With a random mapper

search.search = Search
search.mapper.searchMapper = Search a mapper:
search.mapper.mapperOrLogin = Mapper name or Login
search.mapper.backToMappers = Back to the mappers
search.player.searchPlayer = Search a player:
search.player.playerOrLogin = Player name or Login
search.player.backToPlayers = Back to the players
search.error.required = You must enter a name or a login!
search.error.minChars = You must enter at least %d characters!
search.error.player.noResults = No player found!
search.error.mapper.noResults = No mapper found!

error.wrongktlc = This KTLC does not exist.
error.noktlc = No KTLC available
error.wrongplayer = This player does not exist.
error.noplayer = No player
error.wrongmapper = This mapper does not exist.
error.nomapper = No mapper
error.wrongStats = There is currently no statistics to display.
error.noStats = No statistics
error.wrongValidPlayers = The players entered are not valid for comparison.
error.noValidPlayers = No valid players
error.wrongValidMappers = The mappers entered are not valid for comparison.
error.noValidMappers = No valid mappers

# administration
validation.required = %s is required
validation.min = Cannot be lower than %s
validation.max = Cannot be greater than %s

admin.generalStats = General Statistics Management
admin.options = Options
admin.regen = Regenerate Statistics
admin.manageParams = Manage Parameters
manageParameters.params = Parameters
manageParameters.values = Values
manageParameters.explan = Explanations
manageParameters.length_top.title = Length of the Tops
manageParameters.length_top.legend = This parameter allows the customization of the length of the ranking tops (e.g. Top15) that can be seen in the general statistics page. The length can be set between %1$d and %2$d, and has to be an integer value.
manageParameters.min_participation_percentage.title = Percentage of Participation
manageParameters.min_participation_percentage.legend = This parameter defines the minimal percentage of KTLCs that a player should have played to be considered for <strong>some</strong> of the rankings shown in the general statistics page. The percentage can be set between %1$d and %2$d%%, and has to be an integer value.
manageParameters.min_maps.title = Number of Maps for 'Epic Fails'
manageParameters.min_maps.legend = This parameter defines the minimal number of maps that a player should have played in a KTLC to be considered for the count of 'Epic Fails'. The number of maps can be set between %1$d and %2$d, and has to be an integer value.
manageParameters.validate = Confirm and Regenerate the Statistics
manageParameters.reset = Reset Values
manageParameters.cancel = Cancel
manageParameters.noChanges = No changes in the values of the parameters!
manageParameters.regenInSecs = Statistics regenerated in %s seconds!
manageParameters.errors = Error(s)!
manageParameters.rankLimit.title = Rank Limit for Player statistics
manageParameters.rankLimit.legend = This parameter allows the customization of the sizes of the lists of results by position for the KTLCs and for the Races in the player statistics page (starting at 1st rank to the n-th rank).  The number of ranks can be set between %1$d and %2$d, and has to be an integer value.